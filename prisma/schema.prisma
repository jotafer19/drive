generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model User {
  id        String      @id @default(uuid())
  username  String      @db.VarChar(20)
  email     String      @unique
  password  String
  createdAt DateTime    @default(now())
  folders   Folder[]
  files     File[]
  ShareLink ShareLink[]
}

model Folder {
  id        String      @id @default(uuid())
  name      String      @db.VarChar(20)
  user      User        @relation(fields: [userId], references: [id])
  userId    String
  parent    Folder?     @relation("FolderToFolder", fields: [parentId], references: [id])
  parentId  String?
  children  Folder[]    @relation("FolderToFolder")
  files     File[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  ShareLink ShareLink[]
}

model File {
  id        String   @id @default(uuid())
  name      String
  size      Float
  type      String
  bucketId  String
  URL       String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  folder    Folder?  @relation(fields: [folderId], references: [id])
  folderId  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ShareLink {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  folder    Folder?  @relation(fields: [folderId], references: [id])
  folderId  String?
  createdAt DateTime @default(now())
  expiresAt DateTime

  @@index([userId])
  @@index([folderId])
}
